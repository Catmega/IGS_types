---
- name: Check PostgreSQL Connection
  hosts: localhost
  vars:
    postgres_host: localhost # service name
    postgres_port: 5432 
    postgres_db: igsdatabase
    postgres_user: igs
    postgres_password: igs

  tasks:
    - name: install community general collection 
      shell: ansible-galaxy collection install community.general

    - name: Install packages for ansible 
      ansible.builtin.pip:
        name:
          - psycopg2-binary

    - name: Ping PostgreSQL Database
      community.general.postgresql_ping:
        db: "{{ postgres_db }}"
        login_user: "{{ postgres_user }}"
        login_password: "{{ postgres_password }}"
        login_host: "{{ postgres_host }}"
        login_port: "{{ postgres_port }}"
      register: ping_output

    - name: write a banner
      delegate_to: localhost
      ansible.builtin.shell: echo "*********Validating Postgres Service on Swarm*********" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log

    - name: if succeed, write msg back to a file in the controller node
      delegate_to: localhost
      ansible.builtin.shell: echo " Success! Postgres can be connected, version is {{ ping_output.server_version.full }}" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log
      when: ping_output.is_available 

    - name: if failed, write msg back to a file in the controller node
      delegate_to: localhost
      ansible.builtin.shell: echo " Failure! Postgres CANNOT be connected" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log
      when: not ping_output.is_available




