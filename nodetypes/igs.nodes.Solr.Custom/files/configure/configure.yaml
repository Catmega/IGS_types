---
- name: Run Solr in a container and commit with a new core
  hosts: all
  vars:
    core_name: IGS #'{{CORE_NAME}}'
    host_port: '{{HOST_PORT}}'
    schema_loc: '{{DOCUMENT_SCHEMA_FILE_LOC}}'
    given_file: "{{DOCKER_COMPOSE_FILE_LOC}}"
  tasks:

    - name: Skip the rest of the tasks if DOCKER_COMPOSE_FILE_LOC is not found
      meta: end_play
      when: given_file == "notGiven"

    - name: Dynamically include tasks based on a variable
      include_tasks: "{{ file_path }}"
      vars:
        file_path: "{{DOCKER_COMPOSE_FILE_LOC}}"    
        image_namespace: "{{IMAGE_NAMESPACE}}"
        image_name: "{{IMAGE_NAME}}"
        image_version: "{{IMAGE_VERSION}}" #'{{ REPOSITORY_VERSION }}'
        stack_name: "{{STACK_NAME}}"
        service_name: "{{SERVICE_NAME}}"
        labels: "{{LABELS}}" #'{{ LABELS }}'
        client_mnt_path: "{{ CLIENT_MNT_DIR | default('undefined') }}"
        volume_dir: "{{ VOLUME_DIR | default('undefined') }}"
        container_data_dir: "{{ CONTAINER_DATA_DIR | default('undefined') }}"
        core_name: "{{ CORE_NAME | default('undefined') }}"

    - name: Load document schema from a file
      set_fact:
        document_schema: "{{ lookup('file', '{{schema_loc}}') | from_json }}"

    # - name: Pull and run Solr container
    #   docker_container:
    #     name: '{{container_name}}'
    #     image: solr:latest
    #     command: "solr-precreate {{core_name}}"
    #     state: started
    #     published_ports:
    #       - "{{host_port}}:8983"



    - name: Wait for Solr to be ready
      uri:
        url: "http://localhost:{{host_port}}/solr"
        method: GET
        return_content: yes
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10

    - name: Add document schema for this core
      uri:
        url: "http://localhost:{{host_port}}/solr/{{core_name}}/schema"
        method: POST
        body: '{{document_schema}}'
        body_format: json
        headers:
          Content-Type: "application/json"
        status_code: 200
        return_content: yes
      register: create_schema_response