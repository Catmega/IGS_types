tosca_definitions_version: tosca_simple_yaml_1_3
imports:
  - ../../igs.nodes.abstract/IGSOSInstance/NodeType.tosca
  - ../igs.nodes.Swarm.Manager/NodeType.yaml
  - ../../../capabilitytypes/igs.capabilities.container/DockerRuntime/CapabilityType.tosca
  - ../../igs.nodes.docker/IGSDockerEngine/NodeType.tosca
node_types:
  igs.nodes.Swarm.Worker:
    derived_from: igs.nodes.abstract.OSInstance
    attributes:
      network_name:
        type: string
        default: { get_attribute: [ SELF, manager, network_name ] }
      
      ###########OSInstance related########## 
      private_address: #inherited attr
        type: string
        default: { get_attribute: [SELF, host, ansible_host_ip ] } 
      public_address: #inherited attr
        type: string
        default: { get_attribute: [SELF, host, public_address ] } 
      username:
        type: string
        default: { get_attribute: [SELF, host, ansible_user ] } 
      # tier:
      #   type: string
      #   default: { get_attribute: [SELF, host, tier ] } 
      name:
        type: string
        default: { get_attribute: [SELF, host, ansible_host_name ] } 
      host_name:
        type: string
        default: { get_attribute: [SELF, host, host_name ] } 
    properties:
      node_lables:
        type: string
        # entry_schema:
        #   type: string 
    requirements:
      - manager:
          capability: tosca.capabilities.Compute
          node: igs.nodes.Swarm.Manager
          relationship: tosca.relationships.DependsOn
      - host:
          capability: igs.capabilities.container.DockerRuntime
          node: igs.nodes.docker.DockerEngine
          relationship: tosca.relationships.HostedOn
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create: 
            inputs:
              ANSIBLE_HOST_IP:
                type: string
                required: true
                default: { get_attribute: [SELF, private_address ] }
              ANSIBLE_USER:
                type: string
                required: true
                default: { get_attribute: [SELF, username ] }
              ANSIBLE_HOST_NAME:
                type: string
                required: true
                default: { get_attribute: [SELF, name ] } 
              MANAGER_IP:
                type: string
                required: true
                default: { get_attribute: [ SELF, manager, public_address ] }
              JOIN_TOKEN:
                type: string
                required: true
                default: { get_attribute: [ SELF, manager, join_token ] }
              HOST_NAME:
                type: string
                required: true
                default: { get_attribute: [ SELF, host_name ] }      
              NODE_LABELS:
                type: string
                required: false
                default: { get_property: [ SELF, node_lables ] }  
            implementation:
              primary: files/join-cluster/join-cluster.yaml 


