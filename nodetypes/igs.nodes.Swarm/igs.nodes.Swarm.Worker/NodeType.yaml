tosca_definitions_version: tosca_simple_yaml_1_3
imports:
  - ../../igs.nodes.abstract/IGSOSInstance/NodeType.tosca
  - ../igs.nodes.Swarm.Manager/NodeType.yaml
  - ../../../capabilitytypes/igs.capabilities.container/DockerRuntime/CapabilityType.tosca
  - ../../igs.nodes.docker/IGSDockerEngine/NodeType.tosca
  - ../../igs.nodes.abstract/IGSClusterNode/IGSClusterManager/NodeType.tosca
  - ../../igs.nodes.abstract/IGSClusterNode/IGSClusterWorker/NodeType.tosca
  - ../../../relationshiptypes/igs.relationships/ConnectsToManager/RelationshipType.tosca
  - ../../../interfacetypes/igs.interfaces.node.lifecycle/Validation/InterfaceType.tosca

node_types:
  igs.nodes.Swarm.Worker:
    metadata:
      targetNamespace: "igs.nodes.Swarm"
      abstract: "false"
      final: "false"
    derived_from: igs.nodes.abstract.ClusterWorker
    ############### inherits from ClusterWorker /ClusterNode ###############
    # attributes:
      
      # manager_ip:
      #   type: string
      #   required: true
      #   default: { get_attribute: [ SELF, manager, public_address ] }
      # join_token:
      #   type: string
      #   required: true
      #   default: { get_attribute: [ SELF, manager, join_token ] }
      # host_name:
      #   type: string
      #   default: { get_attribute: [SELF, runtimeHost, host_name ] } 
      # private_address: #inherited attr
      #   type: string
      #   default: { get_attribute: [SELF, host, private_address ] } 
      # public_address: #inherited attr
      #   type: string
      #   description: each ClusterNode is based on a machine with an unique IP address, which is useful. e.g. ClusterWorker need to use this to recognize and join a ClusterManager
      #   default: { get_attribute: [SELF, host, public_address ] } 
      ###########################################################

      # tier: # can be replaced with "labels" in Swarm
      #   type: string
      #   default: { get_attribute: [SELF, runtimeHost, tier ] } 


    ########### inherits from ClusterWorker /ClusterNode ##########
    # properties:
    #   node_lables:
    #     type: string
    ######################################################################

    requirements:

      ######################################################################
      ### override ClusterWorker<-ClusterNode's requirement-runtimeHost ####
      - manager:
          capability: tosca.capabilities.Compute
          node: igs.nodes.Swarm.Manager
          relationship: igs.relationships.ConnectsToManager # tosca.relationships.DependsOn
      - runtimeHost:
          capability: igs.capabilities.container.DockerRuntime
          node: igs.nodes.docker.DockerEngine
          relationship: tosca.relationships.HostedOn
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure: 
            inputs:
              # ANSIBLE_HOST_IP:
              #   type: string
              #   required: true
              #   default: { get_attribute: [SELF, private_address ] }
              # ANSIBLE_USER:
              #   type: string
              #   required: true
              #   default: { get_attribute: [SELF, username ] }
              # ANSIBLE_HOST_NAME:
              #   type: string
              #   required: true
              #   default: { get_attribute: [SELF, name ] } 
              # MANAGER_IP:
              #   type: string
              #   required: true
              #   default: { get_attribute: [ SELF, manager_ip ] }
              # JOIN_TOKEN:
              #   type: string
              #   required: true
              #   default: { get_attribute: [ SELF, join_token ] }
              MANAGER_PRIVATE_ADDR:
                type: string
                required: true
                default: { get_attribute: [ SELF, manager, private_address  ] }
              HOST_NAME:
                type: string
                required: true
                default: { get_attribute: [ SELF, host_name ] }      
              NODE_LABELS:
                type: string
                required: false
                default: { get_property: [ SELF, node_lables ] }  
            implementation:
              primary: files/configure/configure.yaml 
      Validation:
        type: igs.interfaces.node.lifecycle.Validation 
        operations:
          validate: files/validate/validate.yaml 

