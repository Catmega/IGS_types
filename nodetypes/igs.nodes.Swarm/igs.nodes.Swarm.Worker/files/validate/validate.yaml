---

- name: docker playbook
  hosts: all
  gather_facts: false

  tasks:
    - name: write a banner
      delegate_to: localhost
      ansible.builtin.shell: echo "*********Validating Swarm Worker on machine $(hostname -I | awk '{ print $1 }')*********" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log


    - name: execute docker info
      ansible.builtin.shell: docker info
      register: docker_info

    - name: check if swarm is active on this node
      set_fact:
        is_swarm_instance: "{{ 'Swarm: active' in docker_info.stdout }}"

    - name: if the node is NOT part of a Swarm, write msg back to a file in the controller node
      delegate_to: localhost
      ansible.builtin.shell: echo " Failure! This node is not a Swarm instance" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log
      when: not is_swarm_instance

    - name: Skip the rest tasks if not a Swarm instance
      ansible.builtin.meta: end_play
      when: not is_swarm_instance

    - name: check the Swarm role for this node
      set_fact:
        is_swarm_worker: "{{ 'Swarm: active' in docker_info.stdout and 'Is Manager: false' in docker_info.stdout }}"

    - name: if the node is Swarm worker, write msg back to a file in the controller node
      delegate_to: localhost
      ansible.builtin.shell: echo " Success! This node has been initialized as Swarm Worker" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log
      when: is_swarm_worker


    - name: if the node is NOT Swarm worker, write msg back to a file in the controller node
      delegate_to: localhost
      ansible.builtin.shell: echo " Failure! This node is NOT initialized as Swarm Worker" >> /home/ubuntu/opera-root/git-project/ma-jingyue2023/templates/igs_types/validation.log
      when: not is_swarm_worker